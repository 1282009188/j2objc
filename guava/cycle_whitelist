# Too many false positives through the Runnable type.
TYPE java.lang.Runnable

# *** REAL CYCLES ***
# Inverses
FIELD com.google.common.base.Converter.reverse
FIELD com.google.common.collect.AbstractBiMap.inverse
FIELD com.google.common.collect.HashBiMap.inverse
FIELD com.google.common.collect.ImmutableListMultimap.inverse
FIELD com.google.common.collect.ImmutableSetMultimap.inverse
FIELD com.google.common.collect.MapConstraints.ConstrainedBiMap.inverse
FIELD com.google.common.collect.Maps.FilteredEntryBiMap.inverse
FIELD com.google.common.collect.Maps.UnmodifiableBiMap.inverse
FIELD com.google.common.collect.RegularImmutableBiMap.inverse
FIELD com.google.common.collect.SingletonImmutableBiMap.inverse
FIELD com.google.common.collect.Synchronized.SynchronizedBiMap.inverse

# Need to fix all "complement" fields in RangeSets.
FIELD com.google.common.collect.ImmutableRangeSet.ranges com.google.common.collect.ImmutableRangeSet.ComplementRanges

# *** FALSE POSITIVES ***
FIELD com.google.common.collect.AbstractBiMap.EntrySet.iterator.$.entry com.google.common.collect.AbstractBiMap.EntrySet.iterator.$.next.$
FIELD com.google.common.collect.AbstractMapBasedMultimap.KeySet.subMap
FIELD com.google.common.collect.AbstractMapBasedMultimap.map com.google.common.collect.AbstractMapBasedMultimap.AsMap
FIELD com.google.common.collect.AbstractMultimap.asMap com.google.common.collect.AbstractMapBasedMultimap.NavigableAsMap
FIELD com.google.common.collect.AbstractMultimap.keys com.google.common.collect.RegularImmutableMultiset
FIELD com.google.common.collect.AbstractMultimap.values com.google.common.collect.Multimaps.MapMultimap.get.$
FIELD com.google.common.collect.AbstractMultiset.entrySet com.google.common.collect.FilteredEntryMultimap.Keys.entrySet.$
FIELD com.google.common.collect.ImmutableCollection.asList
FIELD com.google.common.collect.ImmutableMap.multimapView
OUTER com.google.common.collect.ImmutableRangeMap.subRangeMap.$
OUTER com.google.common.collect.ImmutableRangeSet.intersectRanges.$
OUTER com.google.common.collect.StandardTable.Row
OUTER com.google.common.collect.TreeBasedTable.TreeRow

FIELD java.util.AbstractMap.keySet com.google.common.collect.Maps.FilteredEntryNavigableMap.navigableKeySet.$
FIELD java.util.AbstractMap.keySet com.google.common.collect.TreeRangeMap.SubRangeMap.SubRangeMapAsMap.keySet.$
FIELD java.util.AbstractMap.valuesCollection com.google.common.collect.TreeRangeMap.SubRangeMap.SubRangeMapAsMap.values.$
FIELD java.util.concurrent.LinkedBlockingDeque.lock com.google.common.collect.MapMakerInternalMap.Segment
FIELD java.util.concurrent.LinkedBlockingQueue.putLock com.google.common.collect.MapMakerInternalMap.Segment
FIELD java.util.concurrent.SynchronousQueue.qlock com.google.common.collect.MapMakerInternalMap.Segment

FIELD com.google.common.util.concurrent.AbstractService.listeners

# TODO(kstanger): investigate these cycles:
NAMESPACE com.google.common.cache
NAMESPACE com.google.common.escape
NAMESPACE com.google.common.hash
NAMESPACE com.google.common.io
NAMESPACE com.google.common.net

# TODO(kstanger): investigate these Guava 18.0 cycles:
FIELD com.google.common.collect.ConcurrentHashMultiset.countMap
FIELD com.google.common.collect.Maps.KeySet.map
FIELD com.google.common.collect.TreeTraverser.PreOrderIterator.stack
FIELD com.google.common.collect.TreeTraverser.PostOrderIterator.stack
FIELD com.google.common.collect.TreeTraverser.PostOrderNode.childIterator
FIELD com.google.common.util.concurrent.Futures.WrappedCombiner.outputFuture
FIELD com.google.common.util.concurrent.AbstractScheduledService.ServiceDelegate.executorService
TYPE com.google.common.collect.LinkedListMultimap
TYPE com.google.common.collect.Maps.FilteredEntryMap
TYPE com.google.common.collect.Maps.FilteredMapValues
TYPE com.google.common.collect.Maps.ImprovedAbstractMap
TYPE com.google.common.collect.Maps.TransformedEntriesMap
